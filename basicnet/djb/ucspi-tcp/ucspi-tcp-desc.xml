<sect2>
<title>Contents</title>

<para>The ucspi-tcp package contains <command>tcpserver</command>,
<command>tcprules</command>, <command>tcprulescheck</command>,
<command>argv0</command>, <command>fixcrio</command>,
<command>recordio</command>, <command>rblsmtpd</command>,
<command>tcpclient</command>, <command>who@</command>,
<command>date@</command>, <command>finger@</command>,
<command>http@</command>, <command>tcpcat</command>,
<command>mconnect</command>, <command>addcr</command> and
<command>delcr</command></para>

<para>You can also find detailed descriptions of each of these programs at 
<ulink url="http://cr.yp.to/ucspi-tcp/tcpserver.html"/>, but here is a brief summary:</para>

</sect2>

<sect2><title>Description</title>

<sect3><title>tcpserver</title>
<para><command>tcpserver</command> listens for incoming <acronym>TCP</acronym> 
connections on a given port, and runs a program of your choosing in response to 
a connection.</para></sect3>

<sect3><title>tcprules</title>
<para><command>tcprules</command> compiles rules that govern access
control for <command>tcpserver</command> into a fast access database format.
</para></sect3>

<sect3><title>tcprulescheck</title>
<para><command>tcprulescheck</command> makes it possible to see how
<command>tcpserver</command> will react to connections from a given address 
without actually having to connect via that address. This is useful for 
checking to see if the access control rules you are using are doing what you 
expected.</para></sect3>

<sect3><title>argv0</title>
<para><command>argv0</command> runs a given program with a specified 0th 
argument.</para></sect3>

<sect3><title>fixcrio</title>
<para><command>fixcrio</command> inserts carriage returns at the end of lines 
when they are missing.</para></sect3>

<sect3><title>recordio</title>
<para><command>recordio</command> records all input and output of a program 
given as an argument.</para></sect3>

<sect3><title>rblsmtpd</title>
<para><command>rblsmtpd</command> is a spam blocking program that works in 
conjunction with your <acronym>SMTP</acronym> daemon and <command>tcpserver
</command>.</para></sect3>

<sect3><title>tcpclient</title>
<para><command>tcpclient</command> creates a connection to a <acronym>TCP
</acronym> port for a given program.</para></sect3>

<sect3><title>who@</title>
<para><command>who@</command> is a demonstration program using <command>
tcpclient</command> that has the functionality of the <command>rwho</command> 
program. It requires a server running <command>sysstat</command> on port 11.
</para></sect3>

<sect3><title>date@</title>
<para><command>date@</command> is a demonstration program using <command>
tcpclient</command> that will return the system time of a remote host which 
is running a <command>daytime</command> service on port 13.</para></sect3>

<sect3><title>finger@</title>
<para><command>finger@</command> is a demonstration program using <command>
tcpclient</command> that mimics the functionality of the <command>finger
</command> program. It requires a server running <command>fingerd</command> 
on port 79.</para></sect3>

<sect3><title>http@</title>
<para><command>http@</command> downloads web pages from web servers.</para>
</sect3>

<sect3><title>tcpcat</title>
<para><command>tcpcat</command> connects to a <acronym>TCP</acronym> port and 
prints all that is returned from the port.</para></sect3>

<sect3><title>mconnect</title>
<para><command>mconnect</command> connects to a <acronym>TCP</acronym> port, 
delivers any input specified to the port, and prints any output from the port.
</para></sect3>

<sect3><title>addcr</title>
<para><command>addcr</command> adds carriage returns to files. This and
<command>delcr</command> are useful for converting between Windows to UNIX file 
formats.</para></sect3>

<sect3><title>delcr</title>
<para><command>delcr</command> removes carriage returns from files.</para>
</sect3>

</sect2>

