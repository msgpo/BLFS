<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
   "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

<!ENTITY leafnode-download-http "http://prdownloads.sourceforge.net/leafnode/leafnode-&leafnode-version;.rel.tar.bz2">
<!ENTITY leafnode-download-ftp "ftp://ftp.gwdg.de/pub/linux/mirrors/sunsite/system/news/transport/leafnode-&leafnode-version;.rel.tar.bz2">
<!ENTITY leafnode-md5sum "1d8d27673780ba49fcb69883c2cabdec">
<!ENTITY leafnode-size "385 KB">
<!ENTITY leafnode-buildsize "6.3 MB">
<!ENTITY leafnode-time "0.10 SBU">
]>

<sect1 id="leafnode" xreflabel="Leafnode-&leafnode-version;">
<sect1info>
<othername>$LastChangedBy$</othername>
<date>$Date$</date>
</sect1info>
<?dbhtml filename="leafnode.html"?>
<title>Leafnode-&leafnode-version;</title>

<indexterm zone="leafnode">
  <primary sortas="a-Leafnode">Leafnode</primary>
</indexterm>

<sect2>
<title>Introduction to <application>Leafnode</application></title>

<para><application>Leafnode</application> is an <acronym>NNTP</acronym>
server designed for small sites to provide a local USENET spool.</para>

<sect3><title>Package information</title>
<itemizedlist spacing='compact'>
  <listitem><para>Download (HTTP): <ulink url="&leafnode-download-http;"/></para></listitem>
  <listitem><para>Download (FTP): <ulink url="&leafnode-download-ftp;"/></para></listitem>
  <listitem><para>Download MD5 sum: &leafnode-md5sum;</para></listitem>
  <listitem><para>Download size: &leafnode-size;</para></listitem>
  <listitem><para>Estimated disk space required: &leafnode-buildsize;</para></listitem>
  <listitem><para>Estimated build time: &leafnode-time;</para></listitem>
</itemizedlist>
</sect3>

<sect3>
<title><application>Leafnode</application> dependencies</title>

<sect4>
<title>Required</title>
  <para><xref linkend="pcre"/> and <xref linkend="tcpwrappers"/></para>
</sect4>

<sect4>
<title>Recommended</title>
  <para><xref linkend="xinetd"/> and <xref linkend="fcron"/></para>
</sect4>
</sect3>

</sect2>

<sect2>
<title>Installation of <application>Leafnode</application></title>

<para>Create the group and user news, if not present:</para>

<screen><userinput><command>groupadd news &amp;&amp;
useradd -c "Leafnode News Server" -d /var/spool/news -g news news</command></userinput></screen>

<para>Install <application>Leafnode</application> by running the following 
commands:</para>

<screen><userinput><command>./configure --prefix=/usr \
    --localstatedir=/var --sysconfdir=/etc/leafnode \
    --with-lockfile=/var/lock/leafnode/fetchnews.lck &amp;&amp;
make</command></userinput></screen>

<para>Now, as the root user:</para>

<screen><userinput role='root'><command>make install</command></userinput></screen>

</sect2>

<sect2>
<title>Installation command explanations</title>

<para><parameter>--localstatedir=/var</parameter>: Change the default
spool directory of <filename class="directory">/usr/var</filename>.</para>

<para><parameter>--sysconfdir=/etc/leafnode</parameter>: 
<application>Leafnode</application> reads its configuration data from a file 
called <filename>config</filename> which will be created in 
<filename class="directory">/etc/leafnode</filename> to
avoid any potential conflict with other packages.</para>

<para><command>make update</command>: Run this command if you are upgrading
from a very old version of <application>Leafnode</application>.</para>

</sect2>

<sect2>
<title>Configuring <application>Leafnode</application></title>

<sect3 id="leafnode-config"><title>Config files</title>
<para><filename>/etc/leafnode/config</filename>, 
      <filename>/etc/nntpserver</filename>, 
      <filename>/etc/sysconfig/createfiles</filename>
      <filename>/etc/inetd.conf</filename> or
      <filename>/etc/xinetd.conf</filename> or 
      <filename>/etc/xinetd.d/nntp</filename> 
</para>

<indexterm zone="leafnode leafnode-config">
  <primary sortas="e-etc-leafnode-config">/etc/leafnode/config</primary>
</indexterm>

<indexterm zone="leafnode leafnode-config">
  <primary sortas="e-etc-nntpserver">/etc/nntpserver</primary>
</indexterm>

<indexterm zone="leafnode leafnode-config">
  <primary sortas="e-etc-xinetd.conf">/etc/xinetd.conf</primary>
</indexterm>

<indexterm zone="leafnode leafnode-config">
  <primary sortas="e-etc-inetd.conf">/etc/inetd.conf</primary>
</indexterm>

<indexterm zone="leafnode leafnode-config">
  <primary sortas="e-etc-sysconfig-createfiles">/etc/sysconfig/createfiles</primary>
</indexterm>

<indexterm zone="leafnode leafnode-config">
  <primary sortas="e-etc-xinetd.d-nntp">/etc/xinetd.d/nntp</primary>
</indexterm>
</sect3>

<sect3><title>Configuration commands</title>

<para>The <filename>/etc/leafnode/config</filename> file must be
edited to reflect the name of the upstream <acronym>NNTP</acronym>
provider. Copy the example configuration file to 
<filename>/etc/leafnode/config</filename> and save the original for 
reference:</para>

<screen><userinput><command>cp /etc/leafnode/config.example /etc/leafnode/config</command></userinput></screen>

<para>Change the
<screen><userinput>server = </userinput></screen>
entry to reflect your news provider.</para>

<para>The <filename>/etc/nntpserver</filename> file must contain 127.0.0.1 to 
prevent news clients from reading news from the upstream feed. Create this 
file using the following command:</para>

<screen><userinput><command>cat &gt; /etc/nntpserver &lt;&lt; "EOF"</command>
127.0.0.1

<command>EOF</command></userinput></screen>

<para>The <command>/etc/rc.d/init.d/cleanfs</command> script, part of the 
<acronym>LFS</acronym> bootscript package, will remove the 
<filename class="directory">/var/lock/leafnode</filename> directory during
the system boot sequence. Install the following line in the 
<filename>/etc/sysconfig/createfiles</filename> file to re-create the 
directory:</para>

<screen><userinput>/var/lock/leafnode   dir   2775   news   news</userinput></screen>

<para><application>Leafnode</application> may be configured to use
<command>inetd</command> by adding an entry to the 
<filename>/etc/inetd.conf</filename> file with the following
command:</para>

<screen><userinput><command>echo "nntp stream tcp nowait news /usr/sbin/tcpd /usr/sbin/leafnode" \
&gt;&gt; /etc/inetd.conf</command></userinput></screen>

<para>Issue a <command>killall -HUP inetd</command> to reread the
changed <filename>inetd.conf</filename> file.</para>

<para>If you use <command>xinetd</command>, the following command will create the 
<application>Leafnode</application> file as <filename>/etc/xinetd.d/nntp</filename>:</para>

<screen><userinput><command>cat &gt;&gt; /etc/xinetd.d/nntp &lt;&lt; "EOF"</command>
# Begin /etc/xinetd.d/nntp

        service nntp
        {
           flags           = NAMEINARGS NOLIBWRAP
           socket_type     = stream
           protocol        = tcp
           wait            = no
           user            = news
           server          = /usr/sbin/tcpd
           server_args     = /usr/sbin/leafnode
           instances       = 7
           per_source      = 3
        }

# End /etc/xinetd.d/nntp
<command>EOF</command></userinput></screen>

<para>Issue a <command>killall -HUP xinetd</command> to reread the
changed <filename>xinetd.conf</filename> file.</para>

<para>Add entries to the root or news user's crontab to run the 
<command>fetchnews</command> and <command>texpire</command> commands at the
desired time intervals.</para>

</sect3>

</sect2>

<sect2>
<title>Contents</title>

<segmentedlist>
<segtitle>Installed Programs</segtitle>
<segtitle>Installed Libraries</segtitle>
<segtitle>Installed Directories</segtitle>

<seglistitem>
<seg>applyfilter, checkgroups, fetchnews, leafnode, leafnode-version, 
newsq and texpire</seg>
<seg>None</seg>
<seg>/etc/leafnode, /var/lock/leafnode and /var/spool/news</seg>
</seglistitem>
</segmentedlist>

<variablelist>
<bridgehead renderas="sect3">Short Descriptions</bridgehead>
<?dbfo list-presentation="list"?>

<varlistentry id="applyfilter">
<term><command>applyfilter</command></term>
<listitem><para>filters newsgroup articles according to regular 
expressions.</para>
<indexterm zone="leafnode applyfilter">
<primary sortas="b-applyfilter">applyfilter</primary>
</indexterm></listitem>
</varlistentry>

<varlistentry id="checkgroups">
<term><command>checkgroups</command></term>
<listitem><para>inserts newsgroup titles into the newsgroup database.</para>
<indexterm zone="leafnode checkgroups">
<primary sortas="b-checkgroups">checkgroups</primary>
</indexterm></listitem>
</varlistentry>

<varlistentry id="fetchnews">
<term><command>fetchnews</command></term>
<listitem><para>sends posted articles to and retrieves new articles from an 
upstream news server.</para>
<indexterm zone="leafnode fetchnews">
<primary sortas="b-fetchnews">fetchnews</primary>
</indexterm></listitem>
</varlistentry>

<varlistentry id="leafnode-prog">
<term><command>leafnode</command></term>
<listitem><para>is an <acronym>NNTP</acronym> server daemon.</para>
<indexterm zone="leafnode leafnode-prog">
<primary sortas="b-leafnode">leafnode</primary>
</indexterm></listitem>
</varlistentry>

<varlistentry id="leafnode-version">
<term><command>leafnode-version</command></term>
<listitem><para>prints the <application>Leafnode</application> version.</para>
<indexterm zone="leafnode leafnode-version">
<primary sortas="b-leafnode-version">leafnode-version</primary>
</indexterm></listitem>
</varlistentry>

<varlistentry id="newsq">
<term><command>newsq</command></term>
<listitem><para>shows articles waiting to be sent upstream.</para>
<indexterm zone="leafnode newsq">
<primary sortas="b-newsq">newsq</primary>
</indexterm></listitem>
</varlistentry>

<varlistentry id="texpire">
<term><command>texpire</command></term>
<listitem><para>expires old articles and unread groups.</para>
<indexterm zone="leafnode texpire">
<primary sortas="b-texpire">texpire</primary>
</indexterm></listitem>
</varlistentry>
</variablelist>

</sect2>

</sect1>
